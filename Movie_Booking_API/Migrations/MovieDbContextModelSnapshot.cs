// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movie_Booking_API.Models;

#nullable disable

namespace Movie_Booking_API.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    partial class MovieDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movie_Booking_API.Models.Movie", b =>
                {
                    b.Property<string>("MovieName")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<string>("TheaterName")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketAllotted")
                        .HasColumnType("int");

                    b.Property<int>("TicketsAvail")
                        .HasColumnType("int");

                    b.HasKey("MovieName", "TheaterName");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieName = "TIGER",
                            TheaterName = "PVR",
                            Status = "BOOK ASAP",
                            TicketAllotted = 20,
                            TicketsAvail = 20
                        },
                        new
                        {
                            MovieName = "MI",
                            TheaterName = "INOX",
                            Status = "BOOK ASAP",
                            TicketAllotted = 10,
                            TicketsAvail = 10
                        });
                });

            modelBuilder.Entity("Movie_Booking_API.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("NoOfTickets")
                        .HasColumnType("int");

                    b.Property<string>("SeatNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheaterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TicketId");

                    b.HasIndex("MovieName", "TheaterName");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Movie_Booking_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("ContactNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("LoginId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactNo = 912334567890L,
                            Email = "anvesh@gmail.com",
                            FirstName = "Anvesh",
                            LastName = "Deo",
                            LoginId = "deo",
                            Password = "123456",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("Movie_Booking_API.Models.Ticket", b =>
                {
                    b.HasOne("Movie_Booking_API.Models.Movie", "Movie")
                        .WithMany("Tickets")
                        .HasForeignKey("MovieName", "TheaterName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movie_Booking_API.Models.Movie", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
